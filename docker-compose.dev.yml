version: '3.7'
services:
  # Server
  api:
    stdin_open: true
    tty: true
    image: questionit/api/image
    env_file:
      - ./bootstrap.env
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: questionit_api
    restart: always
    command: "yarn run start:dev:pm2"
    ports:
      - 5001:5000
    volumes:
      - ./server:/app
    depends_on:
      - postgres
      - mysql
      - redis-single
    networks:
      - default

  # Client
  web:
    stdin_open: true
    tty: true
    image: questionit/web/image:latest
    env_file:
      - ./bootstrap.env
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: questionit_client
    restart: always
    command: "yarn run dev"
    ports:
      - 5002:5000
    volumes:
      - ./client:/app
    depends_on:
      - api
    networks:
      - default

  postgres:
    image: postgres:14.1
    container_name: questionit_postgres
    env_file:
      - ./bootstrap.env
    ports:
      - 5432:5432
    volumes:
      - psql_db:/var/lib/postgresql/data
    networks:
      - default

  # - TODO REMOVE AFTER MIGRATION -

  mysql:
    image: mysql:8
    container_name: questionit_mysql
    env_file:
      - ./bootstrap.env
    environment:
      - MYSQL_ROOT_PASSWORD=password
    ports:
      - 3306:3306
    volumes:
      - migrate_mysql_db:/var/lib/mysql
    networks:
      - default

  # - TODO -

  redis-single:
    image: redis:6.2.5-alpine
    user: redis
    container_name: questionit_redis
    restart: always
    entrypoint: redis-server --requirepass questionit --appendonly yes
    environment:
      - REDIS_APPENDONLY=yes
      - REDIS_APPENDFSYNC=always
      - REDIS_PASSWORD=questionit
    ports:
      - 6379:6379
    volumes:
      - redis_single_persist:/data
    deploy:
      replicas: 1
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  psql_db:
    external: true
  migrate_mysql_db:
    external: true
  redis_single_persist:
    external: true
